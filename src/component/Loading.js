import { Spinner, Modal, ListGroup } from 'react-bootstrap';
import useIsMobile from '../component/useIsMobile';
import { FaHome, FaSpotify } from 'react-icons/fa';

const spinner = {
    display: 'flex',
    marginTop:100,
    justifyContent: 'center',
    alignItems:'center',
    textAlign: 'center',
}
const spinnerIMG = {
  display: 'flex',
  marginTop:10,
  justifyContent: 'center',
  alignItems:'center',
  textAlign: 'center',
}
const inSpinner = {
    marginRight: 10,
}
const loadingImage = {
  width: '300px',
    display: 'block',
    marginLeft: 'auto',
    marginRight: 'auto',
    height: 'auto',
    marginTop:250,
}
const loadingImageSearch = {
  width: '300px',
    display: 'block',
    marginLeft: 'auto',
    marginRight: 'auto',
    height: 'auto',
    marginBottom: 10
}

const TEXT = {
  color: 'var(--grayLight)',  
}

// ---------------------------------- NoMatch ---------------------------------- //

function NoMatch() {
  return (
      <>
        <div style={loadingImage}>
          <img src={require(`../images/pien_girl.gif`)}></img> 
        </div>
        <br/>
        <span className="font-semi-bold">
          ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö
        </span>
        <br/>
        <span className="font-semi-bold gray-text">
          <a href={process.env.REACT_APP_FRONTEND_URL}  className="pink-link">
            <FaHome /> ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
          </a>
        </span>
      </>
  )
}

// ---------------------------------- Loading ---------------------------------- //

function Loading() {
  return (
      <div style={spinner}>
        <Spinner animation="border" style={inSpinner}/>
        <span className="font-semi-bold"> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡πâ‡∏≤‡∏ö </span>
      </div>
  )
}

function LoadingIMG() {
    return (
        <div lang="th">
          <div style={loadingImage}>
            <img src={require(`../images/pien_girl.gif`)}></img> 
          </div>

          <div style={spinnerIMG}>
            <Spinner animation="border" style={inSpinner}/>
            <span className="font-big font-semi-bold"> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö </span>
          </div>

          <span className="font-semi-bold gray-text">
              ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡πâ‡∏≤‡∏ö
          </span>
        </div>
    )
}

function LoadingIMGLevels(props) {
  const level = props.level
  return (
      <div style={{marginTop:100}}>
        <div style={loadingImageSearch}>
          <img src={require(`../images/pien_girl.gif`)}></img> 
        </div>

        <div style={spinnerIMG}>
            <Spinner animation="border" style={inSpinner}/>
            <span className="font-big font-semi-bold"> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö </span>
        </div>

        <div className="d-block font-semi-bold gray-text">
          <span>
            ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏û‡∏•‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö<strong> {level} </strong>‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏±‡∏ö
            <br/>
            (‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏≠‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö)
          </span>
        </div>
      </div>
  )
}

const EMOJI = {
  fontSize: 50,
  color: 'var(--grayLight)',  
}

const emojiSadAll = ['( T^T )', '(‚ï•_‚ï•)', '(„Éé_<„ÄÅ)', '(Œº_Œº)', '( ; œâ ; )', '(Ôæâ–î`)']
const emojiSad = emojiSadAll[Math.floor(Math.random()*emojiSadAll.length)];
function NoResult(props) {
  const searchTerm = props.searchTerm
  return (
      <div style={{ textAlign:'center', marginTop: 80, paddingLeft: 30, paddingRight: 30 }}>
        <span style={EMOJI}>
          {emojiSad}
        </span>
        <br/>
        <span style={TEXT}>
          ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤<strong> {searchTerm} </strong>‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö
        </span>
      </div>
  )
}

// ---------------------------------- Emoji ---------------------------------- //

const MARGIN_TOP = {
  marginTop: 80,
}
const MARGIN_TOP_MB = {
  marginTop: 0,
}
const emojiAll = ['( ‚óú‚óí‚óù )‚ô°', ' ï„Å£‚Ä¢ ·¥• ‚Ä¢  î„Å£', '‚ô° ¬¥ÔΩ•·¥óÔΩ• `‚ô°', '( ‡πë>·¥ó<‡πë )', '( „Å§¬¥‚àÄÔΩÄ)„Å§', '( ‚ô° >œâ< ‚ô°)','(‚â•o‚â§)','\(^–î^)/']
const emoji = emojiAll[Math.floor(Math.random()*emojiAll.length)];
function EmojiData() {
  const screenSize = useIsMobile()
  return (
    <div style={!screenSize ? MARGIN_TOP : MARGIN_TOP_MB}>
      <span style={EMOJI}>
        {emoji}
      </span>
    </div>
  )
}

// ---------------------------------- Spotify ---------------------------------- //

const SPOTIFY = <span className="font-semi-bold"><FaSpotify/> Spotify </span>

function NoLoginSpotify() {
  return (
    <div style={loadingImage}>
        <span style={EMOJI}>
          {emojiSad}
        </span>
        <br/><br/>
        <h5 className="font-bold">
          ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡πà‡∏≤‡∏ô {SPOTIFY} ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡πâ‡∏≤‡∏ö
        </h5>
        <span>
              ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡πà‡∏≤‡∏ô {SPOTIFY}
              ‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö
        </span>
    </div>
  )
}

const spotifyButton =
    <div id="spotify-btn" className="font-small">
      <a href={"https://open.spotify.com/"} target="_blank" rel="noopener nore">
        <button id="spotify-open">
          <FaSpotify className="spotify-icon"/>
          Open Spotify
        </button>
      </a>
    </div>
const TokenExpiredPopup = 
  <div className="d-block" style={{ paddingLeft: 15, paddingRight: 15 }}>
    <span>
      ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡πà‡∏≤‡∏ô&nbsp; {SPOTIFY} ‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö üôá‚Äç‚ôÄÔ∏è
    </span>
  </div>

const NoResultPopup = 
              <ListGroup variant="flush">
                <ListGroup.Item className="mb-3">
                  <span>
                    ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ú‡πà‡∏≤‡∏ô {SPOTIFY} ‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö
                  </span>
                  <br/>
                  <span className="open-spotify">
                    ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö ‡∏Å‡∏î‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢! &nbsp; {spotifyButton}
                  </span> 
                </ListGroup.Item>
                <ListGroup.Item>
                  <span>
                    ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡πà‡∏≤‡∏ô {SPOTIFY}
                    ‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö
                  </span>
                </ListGroup.Item>
              </ListGroup>

function SpotifyErrorPopup(props) {
  return (
    <Modal  
      size="lg"
      aria-labelledby="contained-modal-title-vcenter"
      centered
      show={props.show} onHide={props.handleClose}
      animation={false} 
    > 
      <Modal.Header closeButton>
        <Modal.Title>
          <div id="error-head">
            <span>
              ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
            </span>
          </div>
        </Modal.Title>
      </Modal.Header>
      <Modal.Body id="error-body">
        { props.isTokenExpired ? TokenExpiredPopup :NoResultPopup }
      </Modal.Body>
    </Modal>
  )
}

const inSpinnerPopup = {
  margin: '5px 20px',
}
function SpotifyLoadingPopup() {
  return (
    <div className="d-flex align-items-center">
        <Spinner animation="border" style={inSpinnerPopup}/>  
        <div className="d-block">
          <span className="font-semi-bold">
            ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡πâ‡∏≤‡∏ö
          </span>
          <br/>
          <span className="font-big font-semi-bold gray-text">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å {SPOTIFY} ‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏±‡∏ö</span>
        </div>
    </div>
  )
}

export {
    NoMatch,
    LoadingIMG,
    Loading,
    NoResult,
    EmojiData,
    LoadingIMGLevels,
    NoLoginSpotify,
    SpotifyErrorPopup,
    SpotifyLoadingPopup,
}